apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.example.teletron"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    flavorDimensions "stage", "mode"
    productFlavors {
        dev {
            dimension "stage"
            versionCode 100
            //noinspection DevModeObsolete
            minSdkVersion 21
            aaptOptions.cruncherEnabled = false
            resConfigs "ko", "xxhdpi"
        }
        prd {
            dimension "stage"
            versionCode new Date().format('yyMMddHHmm').toInteger()
        }
        free {
            dimension "mode"
        }
        paid {
            dimension "mode"
        }
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'
            universalApk false
        }
    }
    android.variantFilter { variant ->
        def buildName = variant.buildType.name;
        def flavorName = variant.getFlavors().get(0).name;
        if (flavorName == 'dev' && buildName == 'release'
                || flavorName == 'prd' && buildName == 'debug') {
            variant.setIgnore(true);
        }
        splits.abi.enable = (flavorName == 'prd');
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // 머티리얼 디자인
    implementation 'com.google.android.material:material:1.3.0-alpha04'

    // 제트팩 네비게이션 그래프
    implementation 'androidx.navigation:navigation-fragment:2.3.2'
    implementation 'androidx.navigation:navigation-ui:2.3.2'


    // Retrofit & RxJava call adapters & Gson
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'

    //써클뷰
    implementation 'de.hdodenhof:circleimageview:3.0.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // Glide
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'

    // 코틀린 버전
    implementation "android.arch.navigation:navigation-fragment-ktx:1.0.0"
    implementation "android.arch.navigation:navigation-ui-ktx:1.0.0"

    // lottie
    implementation 'com.airbnb.android:lottie:3.0.7'

    // Navigation
    def nav_version = "2.1.0"
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Beacon
    implementation 'org.altbeacon:android-beacon-library:2+'
}
